List

Install Pinia
Install tailwind

Set up layout

DONE Create a frontpage
https://heroicons.com/
DONE Create a brouse page
DONE Create a detail page
DONE Create a log in page
DONE Create a sign up page
DONE Create a creating job
DONE a job position should be a component
DONE Implement state management for users
DONE Make front page dynamic
DONE Make detail dynamic(Separate serializer whith more data)
DONE Make browse dynamic
DONE add setting email
DONE Make it possible to sign up
DONE Make it possible to log in
DONE Make it possible to log out
DONE Initialize the user store after refresh
Show your jobs
Make it possible to 
Make it possible to 
Make it possible to 
Implement meta data on pages
Summary



**Nuxt3 Uncaught (in promise) TypeError: Cannot read properties of undefined (reading 'title')

"""
 ERROR  [nuxt] [request error] [unhandled] [500] Cannot read properties of undefined (reading 'getSSRProps')
  at Module.ssrGetDirectiveProps (./node_modules/.pnpm/@vue+server-renderer@3.4.29_vue@3.4.29/node_modules/@vue/server-renderer/dist/server-renderer.cjs.js:473:40)
  at ./pages/browse/index.vue:88:32
  at Module.ssrRenderList (./node_modules/.pnpm/@vue+server-renderer@3.4.29_vue@3.4.29/node_modules/@vue/server-renderer/dist/server-renderer.cjs.js:438:7)
  at _sfc_ssrRender (./pages/browse/index.vue:85:27)
  at renderComponentSubTree (./node_modules/.pnpm/@vue+server-renderer@3.4.29_vue@3.4.29/node_modules/@vue/server-renderer/dist/server-renderer.cjs.js:693:9)
  at ./node_modules/.pnpm/@vue+server-renderer@3.4.29_vue@3.4.29/node_modules/@vue/server-renderer/dist/server-renderer.cjs.js:635:25
  at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
  at async unrollBuffer$1 (./node_modules/.pnpm/@vue+server-renderer@3.4.29_vue@3.4.29/node_modules/@vue/server-renderer/dist/server-renderer.cjs.js:879:16)
  at async unrollBuffer$1 (./node_modules/.pnpm/@vue+server-renderer@3.4.29_vue@3.4.29/node_modules/@vue/server-renderer/dist/server-renderer.cjs.js:884:16)
  at async unrollBuffer$1 (./node_modules/.pnpm/@vue+server-renderer@3.4.29_vue@3.4.29/node_modules/@vue/server-renderer/dist/server-renderer.cjs.js:884:16)
"""

"""
<script setup>
import { useUserStore } from '@/stores/user'
import { useRouter, useNuxtApp } from 'nuxt/app'

const router = useRouter()
const userStore = useUserStore()
const { $fetch } = useNuxtApp()

let email = ref('')
let password = ref('')
let errors = ref([])

async function submitForm(){
    console.log('submitForm')

    errors.value = []
    
    await $fetch('http://127.0.0.1:8000/api/v1/token/login/',{
        method: 'POST',
        body: {
            username: email.value,
            password: password.value
        }
    })
    .then(data => {
        console.log('response', data.auth_token)

        userStore.setToken(data.auth_token, email.value)

        router.push({ path: '/' })
    })
    .catch(error => {
        if (error.response && error.response._data) {
            for (const property in error.response._data){
                errors.value.push(`${property}: ${error.response._data[property]}`)
            }
            console.log(JSON.stringify(error.response))
        } else if (error.message) {
            errors.value.push('Something went wrong. Please try again')

            console.log(JSON.stringify(error))
        } else {
            errors.value.push('An unknown error occurred')
        }
    })
}
</script>
<template>
<div class="py-10 px-6">
  <div class="max-w-sm mx-auto py-10 px-6 bg-gray-100 rounded-xl">
    <h1 class="mb-6 text-2xl">Log in</h1>
    <form v-on:submit.prevent="submitForm">
      <input v-model="email" type="email" placeholder="Your email address..." class="w-full mb-4 py-4 px-6 rounded-xl"></input>
      <input v-model="password" type="password" placeholder="Your password..." class="w-full mb-4 py-4 px-6 rounded-xl"></input>
      
      <div v-if="errors.length" class="mb-6 py-4 px-6 bg-rose-400 text-white rounded-xl">
        <p v-for="error in errors" v-bind:key="error">
          {{ error }}
        </p>
      </div>
      
      <button class="py-4 px-6 bg-teal-700 text-white rounded-xl">Submit</button>
    </form>
  </div>
</div>
</template>
"""
<!-- sasa@takumi.com -->
<!-- 1234rfdew -->